apply plugin: 'com.android.application'

android {

	compileSdkVersion 22
	buildToolsVersion "22.0.1"

	defaultConfig {
		applicationId "com.example.android.app"

		minSdkVersion 10
		targetSdkVersion 22

		versionCode 1
		versionName "0.0.1-SNAPSHOT"

		// that's for espresso.
		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
		multiDexEnabled true
	}

	packagingOptions {
		exclude 'LICENSE.txt'
		exclude 'META-INF/LICENSE'
		exclude 'META-INF/LICENSE.txt'
		exclude 'META-INF/NOTICE'
	}
}

dependencies {

	compile "com.android.support:appcompat-v7:22.0.0+"

	// app
	compile 'com.android.support:support-annotations:22.0.0'
	compile 'com.android.support:support-v4:22.0.0'
	compile 'com.android.support:appcompat-v7:22.0.0'
	compile('com.google.android.gms:play-services:7.+') {
		exclude module: 'support-v4'
	}
	provided 'com.squareup.dagger:dagger-compiler:1.2.2'
	compile 'com.squareup.dagger:dagger:1.2.2'
	compile 'de.greenrobot:eventbus:2.4.0'


	// robolectric
	testCompile 'junit:junit:4.12'
	testCompile "org.mockito:mockito-core:1.10.19"
	testCompile 'com.squareup:fest-android:1.0.8'
	testCompile "org.robolectric:robolectric:3.0-rc2"

	// espresso
	androidTestCompile 'org.hamcrest:hamcrest-core:1.1'
	androidTestCompile 'org.hamcrest:hamcrest-library:1.1'
	androidTestCompile 'org.hamcrest:hamcrest-integration:1.1'
	androidTestCompile 'com.android.support.test.espresso:espresso-core:2.1'
	androidTestCompile 'com.android.support.test:runner:0.2'
	androidTestCompile 'com.android.support.test:rules:0.2'
	androidTestCompile 'com.android.support:support-annotations:22.2.0'
}


apply plugin: 'jacoco'

jacoco {
	toolVersion = "0.7.1.201405082137"
}

def coverageSourceDirs = [
		'../app/src/main/java'
]

task jacocoTestReport(type:JacocoReport, dependsOn: "testDebug") {

	group = "Reporting"
	description = "Generate Jacoco coverage reports"

	classDirectories = fileTree(
			dir: '../app/build/intermediates/classes/debug',
			excludes: ['**/R.class',
			           '**/R$*.class',
			           '**/*$ViewInjector*.*',
			           '**/BuildConfig.*',
			           '**/Manifest*.*']
	)

	additionalSourceDirs = files(coverageSourceDirs)
	sourceDirectories = files(coverageSourceDirs)
	executionData = files('../app/build/jacoco/testDebug.exec')

	reports {
		xml.enabled = true
		html.enabled = true
	}

}
